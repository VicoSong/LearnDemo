package com.phicomm.ws.pi021;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2017-03-23T15:26:41.162+08:00
 * Generated source version: 3.1.4
 * 
 */
@WebServiceClient(name = "DeliveryList_OUTService", 
                  wsdlLocation = "file:/D:/ws/pi021/developer/pi021_deliverylist_wsdl.xml",
                  targetNamespace = "http://phicomm.com/WMS/PI021/DeliveryList") 
public class DeliveryListOUTService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://phicomm.com/WMS/PI021/DeliveryList", "DeliveryList_OUTService");
    public final static QName HTTPSPort = new QName("http://phicomm.com/WMS/PI021/DeliveryList", "HTTPS_Port");
    public final static QName HTTPPort = new QName("http://phicomm.com/WMS/PI021/DeliveryList", "HTTP_Port");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/ws/pi021/developer/pi021_deliverylist_wsdl.xml");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(DeliveryListOUTService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/D:/ws/pi021/developer/pi021_deliverylist_wsdl.xml");
        }
        WSDL_LOCATION = url;
    }

    public DeliveryListOUTService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DeliveryListOUTService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DeliveryListOUTService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public DeliveryListOUTService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public DeliveryListOUTService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public DeliveryListOUTService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns DeliveryListOUT
     */
    @WebEndpoint(name = "HTTPS_Port")
    public DeliveryListOUT getHTTPSPort() {
        return super.getPort(HTTPSPort, DeliveryListOUT.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DeliveryListOUT
     */
    @WebEndpoint(name = "HTTPS_Port")
    public DeliveryListOUT getHTTPSPort(WebServiceFeature... features) {
        return super.getPort(HTTPSPort, DeliveryListOUT.class, features);
    }


    /**
     *
     * @return
     *     returns DeliveryListOUT
     */
    @WebEndpoint(name = "HTTP_Port")
    public DeliveryListOUT getHTTPPort() {
        return super.getPort(HTTPPort, DeliveryListOUT.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DeliveryListOUT
     */
    @WebEndpoint(name = "HTTP_Port")
    public DeliveryListOUT getHTTPPort(WebServiceFeature... features) {
        return super.getPort(HTTPPort, DeliveryListOUT.class, features);
    }

}
